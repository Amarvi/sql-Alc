import sqlalchemy
# sqlalchemy.__version__
from sqlalchemy import create_engine

engine = create_engine("sqlite+pysqlite:///:memory:", echo=True, future=True)

from sqlalchemy import text

with engine.connect() as conn:
    result = conn.execute(text("select 'hello world'"))
    print(result.all())
    
with engine.connect() as conn:
    conn.execute(text("CREATE TABLE some_table (x int, y int)"))
    conn.execute(
        text("INSERT INTO some_table (x, y) VALUES (:x, :y)"),
        [{"x": 1, "y": 1}, {"x": 2, "y": 4}]
    )
    conn.commit()
    
with engine.begin() as conn:
    conn.execute(
        text("INSERT INTO some_table (x, y) VALUES (:x, :y)"),
        [{"x": 6, "y": 8}, {"x": 9, "y": 10}]
    )
    
with engine.connect() as conn:
    result = conn.execute(text("SELECT x, y FROM some_table"))
    #for row in result:
    #    print(f"x: {row.x}  y: {row.y}")

    for row in result:
        y = row.y

        # illustrate use with Python f-strings
        print(f"Row: {row.x} {y}")
        
with engine.connect() as conn:   
    result = conn.execute(text("select x, y from some_table"))

    for dict_row in result.mappings():
        x = dict_row['x']
        y = dict_row['y']
        print(f"x: {x}  y: {y}")
